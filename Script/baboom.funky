
#include "std_macros.funky"

do
(
	map obj{
		"name" "Baboom-Man"
		"age" 1300
		"height" 3.1415
		"man" true
		"func1" lambda(print("hello\n"))
		"func2" lambda("_s" function(
			if(equal(get("_s") "hello") 
				print("hello to you\n")
			if(equal(get("_s") "bye")
				print("goodbye to you\n")
			do(
				print("what?\n")
			)))
		))
	};
	
	vlog: obj;
	obj.func1();
	obj.func2("bye");

	j = 0;
	i = 10;
	while(j <= i; do(
		vlog: j;
		j++;
	))
	
	def("vec_sum" "_a" "_b" function(
		// find smallest vector
		_ac = count(get("_a"));
		_bc = count(get("_b"));
		_count = _ac;
		if(_bc < _ac; _count = _bc;)
		// add elements
		_i = 0;
		set_copy("_c" list)
		while(_i < _count; do(
			_sum = add(get_elem(get("_a") get("_i")) get_elem(get("_b") get("_i")));
			push_copy(get("_c") get("_sum"))
			_i++;
		))
		
		return_ref(get("_c"))
	))
	
	list v1{ 1 2.2 3 "hello " };
	list v2{ 4 5.2 6 "world!" };
	print(.vec_sum(get("v1") get("v2"));)
)
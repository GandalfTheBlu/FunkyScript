#macro \.($name) get("$1")
#macro \:($name)\((.*?)\) get("$1" $2)
#macro ($name)\[(.*?)\] get_elem(get("$1") $2)
#macro ($name)\-\>($name)\((.*?)\) eval(get_elem(get("$1") "$2") get("$1") $3)
#macro method\( lambda("this" 
#macro list\s($name)\s*\{($any)\} set_copy("$1" list) push_copy(get("$1") $2)
#macro map\s($name)\s*\{($any)\} set_copy("$1" map) push_copy(get("$1") $2)

#macro ($name)\s\=\s(.*?)\; set_copy("$1" $2)
#macro ($name)\sr\=\s(.*?)\; set_ref("$1" $2)
#macro ($name)\s\+\=\s(.*?)\; set_copy("$1" add(get("$1") $2))
#macro ($name)\s\-\=\s(.*?)\; set_copy("$1" sub(get("$1") $2))
#macro ($name)\s\*\=\s(.*?)\; set_copy("$1" mult(get("$1") $2))
#macro ($name)\s\/\=\s(.*?)\; set_copy("$1" div(get("$1") $2))
#macro ($name)\+\+\; set_copy("$1" add(get("$1") 1))
#macro ($name)\-\-\; set_copy("$1" sub(get("$1") 1))
#macro ($name)\s\<\<\s(.*?)\; push_copy(get("$1") $2)

#macro \[(.*?)\s\<\s(.*?)\] less($1 $2)
#macro \[(.*?)\s\>\s(.*?)\] less($2 $1)
#macro \[(.*?)\s\<\=\s(.*?)\] or(less($1 $2) equal($1 $2))
#macro \[(.*?)\s\>\=\s(.*?)\] or(less($2 $1) equal($1 $2))
#macro \[(.*?)\s\=\=\s(.*?)\] equal($1 $2)
#macro \[(.*?)\s\!\=\s(.*?)\] not(equal($1 $2))
#macro \[(.*?)\s\+\s(.*?)\] add($1 $2)
#macro \[(.*?)\s\-\s(.*?)\] sub($1 $2)
#macro \[(.*?)\s\*\s(.*?)\] mult($1 $2)
#macro \[(.*?)\s\/\s(.*?)\] div($1 $2)